// Auto-generated by internal/cmd/gentokens. DO NOT EDIT

package parser

type TokenType int

const (
	ILLEGAL      TokenType = iota // ILLEGAL
	IGNORABLE                     // Ignorable content, e.g. spaces
	EOF                           // EOF
	BANG                          // !
	DOLLAR                        // $
	PAREN_L                       // (
	PAREN_R                       // )
	SPREAD                        // ...
	COLON                         // :
	EQUALS                        // =
	AT                            // @
	BRACKET_L                     // [
	BRACKET_R                     // ]
	BRACE_L                       // {
	PIPE                          // |
	BRACE_R                       // }
	NAME                          // Name
	INT                           // Int
	FLOAT                         // Float
	STRING                        // String
	TokenTypeMax                  // Max value for token types
)

func (tt TokenType) String() string {
	const s = "ILLEGALIGNORABLEEOFBANGDOLLARPAREN_LPAREN_RSPREADCOLONEQUALSATBRACKET_LBRACKET_RBRACE_LPIPEBRACE_RNAMEINTFLOATSTRINGTokenTypeMax"
	switch tt {
	case ILLEGAL:
		return s[0:7]
	case IGNORABLE:
		return s[7:16]
	case EOF:
		return s[16:19]
	case BANG:
		return s[19:23]
	case DOLLAR:
		return s[23:29]
	case PAREN_L:
		return s[29:36]
	case PAREN_R:
		return s[36:43]
	case SPREAD:
		return s[43:49]
	case COLON:
		return s[49:54]
	case EQUALS:
		return s[54:60]
	case AT:
		return s[60:62]
	case BRACKET_L:
		return s[62:71]
	case BRACKET_R:
		return s[71:80]
	case BRACE_L:
		return s[80:87]
	case PIPE:
		return s[87:91]
	case BRACE_R:
		return s[91:98]
	case NAME:
		return s[98:102]
	case INT:
		return s[102:105]
	case FLOAT:
		return s[105:110]
	case STRING:
		return s[110:116]
	case TokenTypeMax:
		return s[116:128]
	default:
		return "invalid"
	}
}
